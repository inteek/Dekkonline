#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DekkOnline
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dekkOnline")]
	public partial class dbDekkOnlineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Inserttoken(token instance);
    partial void Updatetoken(token instance);
    partial void Deletetoken(token instance);
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertcategoriesDP(categoriesDP instance);
    partial void UpdatecategoriesDP(categoriesDP instance);
    partial void DeletecategoriesDP(categoriesDP instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertbrand(brand instance);
    partial void Updatebrand(brand instance);
    partial void Deletebrand(brand instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertOrdersDetail(OrdersDetail instance);
    partial void UpdateOrdersDetail(OrdersDetail instance);
    partial void DeleteOrdersDetail(OrdersDetail instance);
    partial void InsertUserAddress(UserAddress instance);
    partial void UpdateUserAddress(UserAddress instance);
    partial void DeleteUserAddress(UserAddress instance);
    partial void InsertbitacoraSync(bitacoraSync instance);
    partial void UpdatebitacoraSync(bitacoraSync instance);
    partial void DeletebitacoraSync(bitacoraSync instance);
    partial void InsertWorkshop(Workshop instance);
    partial void UpdateWorkshop(Workshop instance);
    partial void DeleteWorkshop(Workshop instance);
    #endregion
		
		public dbDekkOnlineDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDekkOnlineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDekkOnlineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDekkOnlineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDekkOnlineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<token> tokens
		{
			get
			{
				return this.GetTable<token>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<categoriesDP> categoriesDPs
		{
			get
			{
				return this.GetTable<categoriesDP>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<brand> brands
		{
			get
			{
				return this.GetTable<brand>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<OrdersDetail> OrdersDetail
		{
			get
			{
				return this.GetTable<OrdersDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserAddress> UserAddress
		{
			get
			{
				return this.GetTable<UserAddress>();
			}
		}
		
		public System.Data.Linq.Table<bitacoraSync> bitacoraSyncs
		{
			get
			{
				return this.GetTable<bitacoraSync>();
			}
		}
		
		public System.Data.Linq.Table<Workshop> Workshop
		{
			get
			{
				return this.GetTable<Workshop>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tokens")]
	public partial class token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tokId;
		
		private System.DateTime _tokDate;
		
		private string _tokData;
		
		private System.DateTime _tokStockLastUpdate;
		
		private System.DateTime _tokCategoriesLastUpdate;
		
		private System.DateTime _tokBrandsLastUpdate;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntokIdChanging(int value);
    partial void OntokIdChanged();
    partial void OntokDateChanging(System.DateTime value);
    partial void OntokDateChanged();
    partial void OntokDataChanging(string value);
    partial void OntokDataChanged();
    partial void OntokStockLastUpdateChanging(System.DateTime value);
    partial void OntokStockLastUpdateChanged();
    partial void OntokCategoriesLastUpdateChanging(System.DateTime value);
    partial void OntokCategoriesLastUpdateChanged();
    partial void OntokBrandsLastUpdateChanging(System.DateTime value);
    partial void OntokBrandsLastUpdateChanged();
    #endregion
		
		public token()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tokId
		{
			get
			{
				return this._tokId;
			}
			set
			{
				if ((this._tokId != value))
				{
					this.OntokIdChanging(value);
					this.SendPropertyChanging();
					this._tokId = value;
					this.SendPropertyChanged("tokId");
					this.OntokIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokDate", DbType="DateTime NOT NULL")]
		public System.DateTime tokDate
		{
			get
			{
				return this._tokDate;
			}
			set
			{
				if ((this._tokDate != value))
				{
					this.OntokDateChanging(value);
					this.SendPropertyChanging();
					this._tokDate = value;
					this.SendPropertyChanged("tokDate");
					this.OntokDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokData", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string tokData
		{
			get
			{
				return this._tokData;
			}
			set
			{
				if ((this._tokData != value))
				{
					this.OntokDataChanging(value);
					this.SendPropertyChanging();
					this._tokData = value;
					this.SendPropertyChanged("tokData");
					this.OntokDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokStockLastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime tokStockLastUpdate
		{
			get
			{
				return this._tokStockLastUpdate;
			}
			set
			{
				if ((this._tokStockLastUpdate != value))
				{
					this.OntokStockLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._tokStockLastUpdate = value;
					this.SendPropertyChanged("tokStockLastUpdate");
					this.OntokStockLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokCategoriesLastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime tokCategoriesLastUpdate
		{
			get
			{
				return this._tokCategoriesLastUpdate;
			}
			set
			{
				if ((this._tokCategoriesLastUpdate != value))
				{
					this.OntokCategoriesLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._tokCategoriesLastUpdate = value;
					this.SendPropertyChanged("tokCategoriesLastUpdate");
					this.OntokCategoriesLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokBrandsLastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime tokBrandsLastUpdate
		{
			get
			{
				return this._tokBrandsLastUpdate;
			}
			set
			{
				if ((this._tokBrandsLastUpdate != value))
				{
					this.OntokBrandsLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._tokBrandsLastUpdate = value;
					this.SendPropertyChanged("tokBrandsLastUpdate");
					this.OntokBrandsLastUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categoriesDP")]
	public partial class categoriesDP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _cdpId;
		
		private string _cdpNameDP;
		
		private string _cdpDescriptionDP;
		
		private string _cdpName;
		
		private string _cdpDescription;
		
		private string _cdpImage;
		
		private System.Nullable<System.Guid> _cdpParentId;
		
		private bool _cdpStatus;
		
		private bool _cdpEdited;
		
		private System.DateTime _cdpChangeStatus;
		
		private EntitySet<product> _products;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncdpIdChanging(System.Guid value);
    partial void OncdpIdChanged();
    partial void OncdpNameDPChanging(string value);
    partial void OncdpNameDPChanged();
    partial void OncdpDescriptionDPChanging(string value);
    partial void OncdpDescriptionDPChanged();
    partial void OncdpNameChanging(string value);
    partial void OncdpNameChanged();
    partial void OncdpDescriptionChanging(string value);
    partial void OncdpDescriptionChanged();
    partial void OncdpImageChanging(string value);
    partial void OncdpImageChanged();
    partial void OncdpParentIdChanging(System.Nullable<System.Guid> value);
    partial void OncdpParentIdChanged();
    partial void OncdpStatusChanging(bool value);
    partial void OncdpStatusChanged();
    partial void OncdpEditedChanging(bool value);
    partial void OncdpEditedChanged();
    partial void OncdpChangeStatusChanging(System.DateTime value);
    partial void OncdpChangeStatusChanged();
    #endregion
		
		public categoriesDP()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid cdpId
		{
			get
			{
				return this._cdpId;
			}
			set
			{
				if ((this._cdpId != value))
				{
					this.OncdpIdChanging(value);
					this.SendPropertyChanging();
					this._cdpId = value;
					this.SendPropertyChanged("cdpId");
					this.OncdpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpNameDP", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cdpNameDP
		{
			get
			{
				return this._cdpNameDP;
			}
			set
			{
				if ((this._cdpNameDP != value))
				{
					this.OncdpNameDPChanging(value);
					this.SendPropertyChanging();
					this._cdpNameDP = value;
					this.SendPropertyChanged("cdpNameDP");
					this.OncdpNameDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpDescriptionDP", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string cdpDescriptionDP
		{
			get
			{
				return this._cdpDescriptionDP;
			}
			set
			{
				if ((this._cdpDescriptionDP != value))
				{
					this.OncdpDescriptionDPChanging(value);
					this.SendPropertyChanging();
					this._cdpDescriptionDP = value;
					this.SendPropertyChanged("cdpDescriptionDP");
					this.OncdpDescriptionDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cdpName
		{
			get
			{
				return this._cdpName;
			}
			set
			{
				if ((this._cdpName != value))
				{
					this.OncdpNameChanging(value);
					this.SendPropertyChanging();
					this._cdpName = value;
					this.SendPropertyChanged("cdpName");
					this.OncdpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpDescription", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string cdpDescription
		{
			get
			{
				return this._cdpDescription;
			}
			set
			{
				if ((this._cdpDescription != value))
				{
					this.OncdpDescriptionChanging(value);
					this.SendPropertyChanging();
					this._cdpDescription = value;
					this.SendPropertyChanged("cdpDescription");
					this.OncdpDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpImage", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cdpImage
		{
			get
			{
				return this._cdpImage;
			}
			set
			{
				if ((this._cdpImage != value))
				{
					this.OncdpImageChanging(value);
					this.SendPropertyChanging();
					this._cdpImage = value;
					this.SendPropertyChanged("cdpImage");
					this.OncdpImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> cdpParentId
		{
			get
			{
				return this._cdpParentId;
			}
			set
			{
				if ((this._cdpParentId != value))
				{
					this.OncdpParentIdChanging(value);
					this.SendPropertyChanging();
					this._cdpParentId = value;
					this.SendPropertyChanged("cdpParentId");
					this.OncdpParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpStatus", DbType="Bit NOT NULL")]
		public bool cdpStatus
		{
			get
			{
				return this._cdpStatus;
			}
			set
			{
				if ((this._cdpStatus != value))
				{
					this.OncdpStatusChanging(value);
					this.SendPropertyChanging();
					this._cdpStatus = value;
					this.SendPropertyChanged("cdpStatus");
					this.OncdpStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpEdited", DbType="Bit NOT NULL")]
		public bool cdpEdited
		{
			get
			{
				return this._cdpEdited;
			}
			set
			{
				if ((this._cdpEdited != value))
				{
					this.OncdpEditedChanging(value);
					this.SendPropertyChanging();
					this._cdpEdited = value;
					this.SendPropertyChanged("cdpEdited");
					this.OncdpEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpChangeStatus", DbType="DateTime NOT NULL")]
		public System.DateTime cdpChangeStatus
		{
			get
			{
				return this._cdpChangeStatus;
			}
			set
			{
				if ((this._cdpChangeStatus != value))
				{
					this.OncdpChangeStatusChanging(value);
					this.SendPropertyChanging();
					this._cdpChangeStatus = value;
					this.SendPropertyChanged("cdpChangeStatus");
					this.OncdpChangeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoriesDP_product", Storage="_products", ThisKey="cdpId", OtherKey="cdpId")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.categoriesDP = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.categoriesDP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catId;
		
		private string _catName;
		
		private string _catDescription;
		
		private string _catImage;
		
		private bool _catStatus;
		
		private EntitySet<product> _products;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIdChanging(int value);
    partial void OncatIdChanged();
    partial void OncatNameChanging(string value);
    partial void OncatNameChanged();
    partial void OncatDescriptionChanging(string value);
    partial void OncatDescriptionChanged();
    partial void OncatImageChanging(string value);
    partial void OncatImageChanged();
    partial void OncatStatusChanging(bool value);
    partial void OncatStatusChanged();
    #endregion
		
		public category()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string catName
		{
			get
			{
				return this._catName;
			}
			set
			{
				if ((this._catName != value))
				{
					this.OncatNameChanging(value);
					this.SendPropertyChanging();
					this._catName = value;
					this.SendPropertyChanged("catName");
					this.OncatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string catDescription
		{
			get
			{
				return this._catDescription;
			}
			set
			{
				if ((this._catDescription != value))
				{
					this.OncatDescriptionChanging(value);
					this.SendPropertyChanging();
					this._catDescription = value;
					this.SendPropertyChanged("catDescription");
					this.OncatDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catImage", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string catImage
		{
			get
			{
				return this._catImage;
			}
			set
			{
				if ((this._catImage != value))
				{
					this.OncatImageChanging(value);
					this.SendPropertyChanging();
					this._catImage = value;
					this.SendPropertyChanged("catImage");
					this.OncatImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catStatus", DbType="Bit NOT NULL")]
		public bool catStatus
		{
			get
			{
				return this._catStatus;
			}
			set
			{
				if ((this._catStatus != value))
				{
					this.OncatStatusChanging(value);
					this.SendPropertyChanging();
					this._catStatus = value;
					this.SendPropertyChanged("catStatus");
					this.OncatStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_products", ThisKey="catId", OtherKey="catId")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proId;
		
		private System.Nullable<System.Guid> _proUUID;
		
		private System.Guid _braId;
		
		private System.Guid _cdpId;
		
		private System.Guid _proSkuId;
		
		private string _proSkuDP;
		
		private string _proNameDP;
		
		private string _proDescriptionDP;
		
		private string _proCodeDP;
		
		private System.Nullable<int> _proDimensionProfileDP;
		
		private System.Nullable<int> _proDimensionWidthDP;
		
		private System.Nullable<int> _proDimensionDiameterDP;
		
		private System.Nullable<decimal> _proCoverPriceDP;
		
		private System.Nullable<decimal> _proSuggestedPriceDP;
		
		private System.Nullable<int> _proRCRDP;
		
		private string _proLoadIndexDP;
		
		private string _proSpeedDP;
		
		private string _proProductCodeDP;
		
		private string _proFuelDP;
		
		private string _proWetDP;
		
		private string _proNoiseDP;
		
		private string _proTyreSizeDP;
		
		private string _proSku;
		
		private string _proName;
		
		private string _proDescription;
		
		private string _proCode;
		
		private System.Nullable<int> _proDimensionProfile;
		
		private System.Nullable<int> _proDimensionWidth;
		
		private System.Nullable<int> _proDimensionDiameter;
		
		private System.Nullable<decimal> _proCoverPrice;
		
		private System.Nullable<decimal> _proSuggestedPrice;
		
		private System.Nullable<int> _proInventory;
		
		private System.Nullable<int> _proRCR;
		
		private string _proLoadIndex;
		
		private string _proSpeed;
		
		private string _proProductCode;
		
		private string _proFuel;
		
		private string _proWet;
		
		private string _proNoise;
		
		private string _proTyreSize;
		
		private bool _proEdited;
		
		private string _proImage;
		
		private bool _proStatus;
		
		private System.Nullable<int> _catId;
		
		private System.DateTime _proLastUpdateDP;
		
		private System.Nullable<System.DateTime> _proLastUpdate;
		
		private System.Nullable<decimal> _proDiscount;
		
		private EntityRef<category> _category;
		
		private EntityRef<categoriesDP> _categoriesDP;
		
		private EntityRef<brand> _brand;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproIdChanging(int value);
    partial void OnproIdChanged();
    partial void OnproUUIDChanging(System.Nullable<System.Guid> value);
    partial void OnproUUIDChanged();
    partial void OnbraIdChanging(System.Guid value);
    partial void OnbraIdChanged();
    partial void OncdpIdChanging(System.Guid value);
    partial void OncdpIdChanged();
    partial void OnproSkuIdChanging(System.Guid value);
    partial void OnproSkuIdChanged();
    partial void OnproSkuDPChanging(string value);
    partial void OnproSkuDPChanged();
    partial void OnproNameDPChanging(string value);
    partial void OnproNameDPChanged();
    partial void OnproDescriptionDPChanging(string value);
    partial void OnproDescriptionDPChanged();
    partial void OnproCodeDPChanging(string value);
    partial void OnproCodeDPChanged();
    partial void OnproDimensionProfileDPChanging(System.Nullable<int> value);
    partial void OnproDimensionProfileDPChanged();
    partial void OnproDimensionWidthDPChanging(System.Nullable<int> value);
    partial void OnproDimensionWidthDPChanged();
    partial void OnproDimensionDiameterDPChanging(System.Nullable<int> value);
    partial void OnproDimensionDiameterDPChanged();
    partial void OnproCoverPriceDPChanging(System.Nullable<decimal> value);
    partial void OnproCoverPriceDPChanged();
    partial void OnproSuggestedPriceDPChanging(System.Nullable<decimal> value);
    partial void OnproSuggestedPriceDPChanged();
    partial void OnproRCRDPChanging(System.Nullable<int> value);
    partial void OnproRCRDPChanged();
    partial void OnproLoadIndexDPChanging(string value);
    partial void OnproLoadIndexDPChanged();
    partial void OnproSpeedDPChanging(string value);
    partial void OnproSpeedDPChanged();
    partial void OnproProductCodeDPChanging(string value);
    partial void OnproProductCodeDPChanged();
    partial void OnproFuelDPChanging(string value);
    partial void OnproFuelDPChanged();
    partial void OnproWetDPChanging(string value);
    partial void OnproWetDPChanged();
    partial void OnproNoiseDPChanging(string value);
    partial void OnproNoiseDPChanged();
    partial void OnproTyreSizeDPChanging(string value);
    partial void OnproTyreSizeDPChanged();
    partial void OnproSkuChanging(string value);
    partial void OnproSkuChanged();
    partial void OnproNameChanging(string value);
    partial void OnproNameChanged();
    partial void OnproDescriptionChanging(string value);
    partial void OnproDescriptionChanged();
    partial void OnproCodeChanging(string value);
    partial void OnproCodeChanged();
    partial void OnproDimensionProfileChanging(System.Nullable<int> value);
    partial void OnproDimensionProfileChanged();
    partial void OnproDimensionWidthChanging(System.Nullable<int> value);
    partial void OnproDimensionWidthChanged();
    partial void OnproDimensionDiameterChanging(System.Nullable<int> value);
    partial void OnproDimensionDiameterChanged();
    partial void OnproCoverPriceChanging(System.Nullable<decimal> value);
    partial void OnproCoverPriceChanged();
    partial void OnproSuggestedPriceChanging(System.Nullable<decimal> value);
    partial void OnproSuggestedPriceChanged();
    partial void OnproInventoryChanging(System.Nullable<int> value);
    partial void OnproInventoryChanged();
    partial void OnproRCRChanging(System.Nullable<int> value);
    partial void OnproRCRChanged();
    partial void OnproLoadIndexChanging(string value);
    partial void OnproLoadIndexChanged();
    partial void OnproSpeedChanging(string value);
    partial void OnproSpeedChanged();
    partial void OnproProductCodeChanging(string value);
    partial void OnproProductCodeChanged();
    partial void OnproFuelChanging(string value);
    partial void OnproFuelChanged();
    partial void OnproWetChanging(string value);
    partial void OnproWetChanged();
    partial void OnproNoiseChanging(string value);
    partial void OnproNoiseChanged();
    partial void OnproTyreSizeChanging(string value);
    partial void OnproTyreSizeChanged();
    partial void OnproEditedChanging(bool value);
    partial void OnproEditedChanged();
    partial void OnproImageChanging(string value);
    partial void OnproImageChanged();
    partial void OnproStatusChanging(bool value);
    partial void OnproStatusChanged();
    partial void OncatIdChanging(System.Nullable<int> value);
    partial void OncatIdChanged();
    partial void OnproLastUpdateDPChanging(System.DateTime value);
    partial void OnproLastUpdateDPChanged();
    partial void OnproLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnproLastUpdateChanged();
    partial void OnproDiscountChanging(System.Nullable<decimal> value);
    partial void OnproDiscountChanged();
    #endregion
		
		public product()
		{
			this._category = default(EntityRef<category>);
			this._categoriesDP = default(EntityRef<categoriesDP>);
			this._brand = default(EntityRef<brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int proId
		{
			get
			{
				return this._proId;
			}
			set
			{
				if ((this._proId != value))
				{
					this.OnproIdChanging(value);
					this.SendPropertyChanging();
					this._proId = value;
					this.SendPropertyChanged("proId");
					this.OnproIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proUUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> proUUID
		{
			get
			{
				return this._proUUID;
			}
			set
			{
				if ((this._proUUID != value))
				{
					this.OnproUUIDChanging(value);
					this.SendPropertyChanging();
					this._proUUID = value;
					this.SendPropertyChanged("proUUID");
					this.OnproUUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid braId
		{
			get
			{
				return this._braId;
			}
			set
			{
				if ((this._braId != value))
				{
					if (this._brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbraIdChanging(value);
					this.SendPropertyChanging();
					this._braId = value;
					this.SendPropertyChanged("braId");
					this.OnbraIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdpId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cdpId
		{
			get
			{
				return this._cdpId;
			}
			set
			{
				if ((this._cdpId != value))
				{
					if (this._categoriesDP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncdpIdChanging(value);
					this.SendPropertyChanging();
					this._cdpId = value;
					this.SendPropertyChanged("cdpId");
					this.OncdpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSkuId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid proSkuId
		{
			get
			{
				return this._proSkuId;
			}
			set
			{
				if ((this._proSkuId != value))
				{
					this.OnproSkuIdChanging(value);
					this.SendPropertyChanging();
					this._proSkuId = value;
					this.SendPropertyChanged("proSkuId");
					this.OnproSkuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSkuDP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string proSkuDP
		{
			get
			{
				return this._proSkuDP;
			}
			set
			{
				if ((this._proSkuDP != value))
				{
					this.OnproSkuDPChanging(value);
					this.SendPropertyChanging();
					this._proSkuDP = value;
					this.SendPropertyChanged("proSkuDP");
					this.OnproSkuDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proNameDP", DbType="NVarChar(200)")]
		public string proNameDP
		{
			get
			{
				return this._proNameDP;
			}
			set
			{
				if ((this._proNameDP != value))
				{
					this.OnproNameDPChanging(value);
					this.SendPropertyChanging();
					this._proNameDP = value;
					this.SendPropertyChanged("proNameDP");
					this.OnproNameDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDescriptionDP", DbType="NVarChar(2000)")]
		public string proDescriptionDP
		{
			get
			{
				return this._proDescriptionDP;
			}
			set
			{
				if ((this._proDescriptionDP != value))
				{
					this.OnproDescriptionDPChanging(value);
					this.SendPropertyChanging();
					this._proDescriptionDP = value;
					this.SendPropertyChanged("proDescriptionDP");
					this.OnproDescriptionDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proCodeDP", DbType="NVarChar(50)")]
		public string proCodeDP
		{
			get
			{
				return this._proCodeDP;
			}
			set
			{
				if ((this._proCodeDP != value))
				{
					this.OnproCodeDPChanging(value);
					this.SendPropertyChanging();
					this._proCodeDP = value;
					this.SendPropertyChanged("proCodeDP");
					this.OnproCodeDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionProfileDP", DbType="Int")]
		public System.Nullable<int> proDimensionProfileDP
		{
			get
			{
				return this._proDimensionProfileDP;
			}
			set
			{
				if ((this._proDimensionProfileDP != value))
				{
					this.OnproDimensionProfileDPChanging(value);
					this.SendPropertyChanging();
					this._proDimensionProfileDP = value;
					this.SendPropertyChanged("proDimensionProfileDP");
					this.OnproDimensionProfileDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionWidthDP", DbType="Int")]
		public System.Nullable<int> proDimensionWidthDP
		{
			get
			{
				return this._proDimensionWidthDP;
			}
			set
			{
				if ((this._proDimensionWidthDP != value))
				{
					this.OnproDimensionWidthDPChanging(value);
					this.SendPropertyChanging();
					this._proDimensionWidthDP = value;
					this.SendPropertyChanged("proDimensionWidthDP");
					this.OnproDimensionWidthDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionDiameterDP", DbType="Int")]
		public System.Nullable<int> proDimensionDiameterDP
		{
			get
			{
				return this._proDimensionDiameterDP;
			}
			set
			{
				if ((this._proDimensionDiameterDP != value))
				{
					this.OnproDimensionDiameterDPChanging(value);
					this.SendPropertyChanging();
					this._proDimensionDiameterDP = value;
					this.SendPropertyChanged("proDimensionDiameterDP");
					this.OnproDimensionDiameterDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proCoverPriceDP", DbType="Money")]
		public System.Nullable<decimal> proCoverPriceDP
		{
			get
			{
				return this._proCoverPriceDP;
			}
			set
			{
				if ((this._proCoverPriceDP != value))
				{
					this.OnproCoverPriceDPChanging(value);
					this.SendPropertyChanging();
					this._proCoverPriceDP = value;
					this.SendPropertyChanged("proCoverPriceDP");
					this.OnproCoverPriceDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSuggestedPriceDP", DbType="Money")]
		public System.Nullable<decimal> proSuggestedPriceDP
		{
			get
			{
				return this._proSuggestedPriceDP;
			}
			set
			{
				if ((this._proSuggestedPriceDP != value))
				{
					this.OnproSuggestedPriceDPChanging(value);
					this.SendPropertyChanging();
					this._proSuggestedPriceDP = value;
					this.SendPropertyChanged("proSuggestedPriceDP");
					this.OnproSuggestedPriceDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proRCRDP", DbType="Int")]
		public System.Nullable<int> proRCRDP
		{
			get
			{
				return this._proRCRDP;
			}
			set
			{
				if ((this._proRCRDP != value))
				{
					this.OnproRCRDPChanging(value);
					this.SendPropertyChanging();
					this._proRCRDP = value;
					this.SendPropertyChanged("proRCRDP");
					this.OnproRCRDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proLoadIndexDP", DbType="NVarChar(50)")]
		public string proLoadIndexDP
		{
			get
			{
				return this._proLoadIndexDP;
			}
			set
			{
				if ((this._proLoadIndexDP != value))
				{
					this.OnproLoadIndexDPChanging(value);
					this.SendPropertyChanging();
					this._proLoadIndexDP = value;
					this.SendPropertyChanged("proLoadIndexDP");
					this.OnproLoadIndexDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSpeedDP", DbType="NVarChar(50)")]
		public string proSpeedDP
		{
			get
			{
				return this._proSpeedDP;
			}
			set
			{
				if ((this._proSpeedDP != value))
				{
					this.OnproSpeedDPChanging(value);
					this.SendPropertyChanging();
					this._proSpeedDP = value;
					this.SendPropertyChanged("proSpeedDP");
					this.OnproSpeedDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProductCodeDP", DbType="NVarChar(50)")]
		public string proProductCodeDP
		{
			get
			{
				return this._proProductCodeDP;
			}
			set
			{
				if ((this._proProductCodeDP != value))
				{
					this.OnproProductCodeDPChanging(value);
					this.SendPropertyChanging();
					this._proProductCodeDP = value;
					this.SendPropertyChanged("proProductCodeDP");
					this.OnproProductCodeDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proFuelDP", DbType="NVarChar(5)")]
		public string proFuelDP
		{
			get
			{
				return this._proFuelDP;
			}
			set
			{
				if ((this._proFuelDP != value))
				{
					this.OnproFuelDPChanging(value);
					this.SendPropertyChanging();
					this._proFuelDP = value;
					this.SendPropertyChanged("proFuelDP");
					this.OnproFuelDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proWetDP", DbType="NVarChar(5)")]
		public string proWetDP
		{
			get
			{
				return this._proWetDP;
			}
			set
			{
				if ((this._proWetDP != value))
				{
					this.OnproWetDPChanging(value);
					this.SendPropertyChanging();
					this._proWetDP = value;
					this.SendPropertyChanged("proWetDP");
					this.OnproWetDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proNoiseDP", DbType="NVarChar(5)")]
		public string proNoiseDP
		{
			get
			{
				return this._proNoiseDP;
			}
			set
			{
				if ((this._proNoiseDP != value))
				{
					this.OnproNoiseDPChanging(value);
					this.SendPropertyChanging();
					this._proNoiseDP = value;
					this.SendPropertyChanged("proNoiseDP");
					this.OnproNoiseDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proTyreSizeDP", DbType="NVarChar(50)")]
		public string proTyreSizeDP
		{
			get
			{
				return this._proTyreSizeDP;
			}
			set
			{
				if ((this._proTyreSizeDP != value))
				{
					this.OnproTyreSizeDPChanging(value);
					this.SendPropertyChanging();
					this._proTyreSizeDP = value;
					this.SendPropertyChanged("proTyreSizeDP");
					this.OnproTyreSizeDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSku", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string proSku
		{
			get
			{
				return this._proSku;
			}
			set
			{
				if ((this._proSku != value))
				{
					this.OnproSkuChanging(value);
					this.SendPropertyChanging();
					this._proSku = value;
					this.SendPropertyChanged("proSku");
					this.OnproSkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proName", DbType="NVarChar(200)")]
		public string proName
		{
			get
			{
				return this._proName;
			}
			set
			{
				if ((this._proName != value))
				{
					this.OnproNameChanging(value);
					this.SendPropertyChanging();
					this._proName = value;
					this.SendPropertyChanged("proName");
					this.OnproNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDescription", DbType="NVarChar(2000)")]
		public string proDescription
		{
			get
			{
				return this._proDescription;
			}
			set
			{
				if ((this._proDescription != value))
				{
					this.OnproDescriptionChanging(value);
					this.SendPropertyChanging();
					this._proDescription = value;
					this.SendPropertyChanged("proDescription");
					this.OnproDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proCode", DbType="NVarChar(50)")]
		public string proCode
		{
			get
			{
				return this._proCode;
			}
			set
			{
				if ((this._proCode != value))
				{
					this.OnproCodeChanging(value);
					this.SendPropertyChanging();
					this._proCode = value;
					this.SendPropertyChanged("proCode");
					this.OnproCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionProfile", DbType="Int")]
		public System.Nullable<int> proDimensionProfile
		{
			get
			{
				return this._proDimensionProfile;
			}
			set
			{
				if ((this._proDimensionProfile != value))
				{
					this.OnproDimensionProfileChanging(value);
					this.SendPropertyChanging();
					this._proDimensionProfile = value;
					this.SendPropertyChanged("proDimensionProfile");
					this.OnproDimensionProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionWidth", DbType="Int")]
		public System.Nullable<int> proDimensionWidth
		{
			get
			{
				return this._proDimensionWidth;
			}
			set
			{
				if ((this._proDimensionWidth != value))
				{
					this.OnproDimensionWidthChanging(value);
					this.SendPropertyChanging();
					this._proDimensionWidth = value;
					this.SendPropertyChanged("proDimensionWidth");
					this.OnproDimensionWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDimensionDiameter", DbType="Int")]
		public System.Nullable<int> proDimensionDiameter
		{
			get
			{
				return this._proDimensionDiameter;
			}
			set
			{
				if ((this._proDimensionDiameter != value))
				{
					this.OnproDimensionDiameterChanging(value);
					this.SendPropertyChanging();
					this._proDimensionDiameter = value;
					this.SendPropertyChanged("proDimensionDiameter");
					this.OnproDimensionDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proCoverPrice", DbType="Money")]
		public System.Nullable<decimal> proCoverPrice
		{
			get
			{
				return this._proCoverPrice;
			}
			set
			{
				if ((this._proCoverPrice != value))
				{
					this.OnproCoverPriceChanging(value);
					this.SendPropertyChanging();
					this._proCoverPrice = value;
					this.SendPropertyChanged("proCoverPrice");
					this.OnproCoverPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSuggestedPrice", DbType="Money")]
		public System.Nullable<decimal> proSuggestedPrice
		{
			get
			{
				return this._proSuggestedPrice;
			}
			set
			{
				if ((this._proSuggestedPrice != value))
				{
					this.OnproSuggestedPriceChanging(value);
					this.SendPropertyChanging();
					this._proSuggestedPrice = value;
					this.SendPropertyChanged("proSuggestedPrice");
					this.OnproSuggestedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proInventory", DbType="Int")]
		public System.Nullable<int> proInventory
		{
			get
			{
				return this._proInventory;
			}
			set
			{
				if ((this._proInventory != value))
				{
					this.OnproInventoryChanging(value);
					this.SendPropertyChanging();
					this._proInventory = value;
					this.SendPropertyChanged("proInventory");
					this.OnproInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proRCR", DbType="Int")]
		public System.Nullable<int> proRCR
		{
			get
			{
				return this._proRCR;
			}
			set
			{
				if ((this._proRCR != value))
				{
					this.OnproRCRChanging(value);
					this.SendPropertyChanging();
					this._proRCR = value;
					this.SendPropertyChanged("proRCR");
					this.OnproRCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proLoadIndex", DbType="NVarChar(50)")]
		public string proLoadIndex
		{
			get
			{
				return this._proLoadIndex;
			}
			set
			{
				if ((this._proLoadIndex != value))
				{
					this.OnproLoadIndexChanging(value);
					this.SendPropertyChanging();
					this._proLoadIndex = value;
					this.SendPropertyChanged("proLoadIndex");
					this.OnproLoadIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proSpeed", DbType="NVarChar(50)")]
		public string proSpeed
		{
			get
			{
				return this._proSpeed;
			}
			set
			{
				if ((this._proSpeed != value))
				{
					this.OnproSpeedChanging(value);
					this.SendPropertyChanging();
					this._proSpeed = value;
					this.SendPropertyChanged("proSpeed");
					this.OnproSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProductCode", DbType="NVarChar(50)")]
		public string proProductCode
		{
			get
			{
				return this._proProductCode;
			}
			set
			{
				if ((this._proProductCode != value))
				{
					this.OnproProductCodeChanging(value);
					this.SendPropertyChanging();
					this._proProductCode = value;
					this.SendPropertyChanged("proProductCode");
					this.OnproProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proFuel", DbType="NVarChar(5)")]
		public string proFuel
		{
			get
			{
				return this._proFuel;
			}
			set
			{
				if ((this._proFuel != value))
				{
					this.OnproFuelChanging(value);
					this.SendPropertyChanging();
					this._proFuel = value;
					this.SendPropertyChanged("proFuel");
					this.OnproFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proWet", DbType="NVarChar(5)")]
		public string proWet
		{
			get
			{
				return this._proWet;
			}
			set
			{
				if ((this._proWet != value))
				{
					this.OnproWetChanging(value);
					this.SendPropertyChanging();
					this._proWet = value;
					this.SendPropertyChanged("proWet");
					this.OnproWetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proNoise", DbType="NVarChar(5)")]
		public string proNoise
		{
			get
			{
				return this._proNoise;
			}
			set
			{
				if ((this._proNoise != value))
				{
					this.OnproNoiseChanging(value);
					this.SendPropertyChanging();
					this._proNoise = value;
					this.SendPropertyChanged("proNoise");
					this.OnproNoiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proTyreSize", DbType="NVarChar(50)")]
		public string proTyreSize
		{
			get
			{
				return this._proTyreSize;
			}
			set
			{
				if ((this._proTyreSize != value))
				{
					this.OnproTyreSizeChanging(value);
					this.SendPropertyChanging();
					this._proTyreSize = value;
					this.SendPropertyChanged("proTyreSize");
					this.OnproTyreSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proEdited", DbType="Bit NOT NULL")]
		public bool proEdited
		{
			get
			{
				return this._proEdited;
			}
			set
			{
				if ((this._proEdited != value))
				{
					this.OnproEditedChanging(value);
					this.SendPropertyChanging();
					this._proEdited = value;
					this.SendPropertyChanged("proEdited");
					this.OnproEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proImage", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string proImage
		{
			get
			{
				return this._proImage;
			}
			set
			{
				if ((this._proImage != value))
				{
					this.OnproImageChanging(value);
					this.SendPropertyChanging();
					this._proImage = value;
					this.SendPropertyChanged("proImage");
					this.OnproImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proStatus", DbType="Bit NOT NULL")]
		public bool proStatus
		{
			get
			{
				return this._proStatus;
			}
			set
			{
				if ((this._proStatus != value))
				{
					this.OnproStatusChanging(value);
					this.SendPropertyChanging();
					this._proStatus = value;
					this.SendPropertyChanged("proStatus");
					this.OnproStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", DbType="Int")]
		public System.Nullable<int> catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proLastUpdateDP", DbType="DateTime NOT NULL")]
		public System.DateTime proLastUpdateDP
		{
			get
			{
				return this._proLastUpdateDP;
			}
			set
			{
				if ((this._proLastUpdateDP != value))
				{
					this.OnproLastUpdateDPChanging(value);
					this.SendPropertyChanging();
					this._proLastUpdateDP = value;
					this.SendPropertyChanged("proLastUpdateDP");
					this.OnproLastUpdateDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proLastUpdate", DbType="Date")]
		public System.Nullable<System.DateTime> proLastUpdate
		{
			get
			{
				return this._proLastUpdate;
			}
			set
			{
				if ((this._proLastUpdate != value))
				{
					this.OnproLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._proLastUpdate = value;
					this.SendPropertyChanged("proLastUpdate");
					this.OnproLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proDiscount", DbType="money")]
		public System.Nullable<decimal> proDiscount
		{
			get
			{
				return this._proDiscount;
			}
			set
			{
				if ((this._proDiscount != value))
				{
					this.OnproDiscountChanging(value);
					this.SendPropertyChanging();
					this._proDiscount = value;
					this.SendPropertyChanged("proDiscount");
					this.OnproDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_category", ThisKey="catId", OtherKey="catId", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.products.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._catId = value.catId;
					}
					else
					{
						this._catId = default(Nullable<int>);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoriesDP_product", Storage="_categoriesDP", ThisKey="cdpId", OtherKey="cdpId", IsForeignKey=true)]
		public categoriesDP categoriesDP
		{
			get
			{
				return this._categoriesDP.Entity;
			}
			set
			{
				categoriesDP previousValue = this._categoriesDP.Entity;
				if (((previousValue != value) 
							|| (this._categoriesDP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._categoriesDP.Entity = null;
						previousValue.products.Remove(this);
					}
					this._categoriesDP.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._cdpId = value.cdpId;
					}
					else
					{
						this._cdpId = default(System.Guid);
					}
					this.SendPropertyChanged("categoriesDP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_product", Storage="_brand", ThisKey="braId", OtherKey="braId", IsForeignKey=true)]
		public brand brand
		{
			get
			{
				return this._brand.Entity;
			}
			set
			{
				brand previousValue = this._brand.Entity;
				if (((previousValue != value) 
							|| (this._brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._brand.Entity = null;
						previousValue.products.Remove(this);
					}
					this._brand.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._braId = value.braId;
					}
					else
					{
						this._braId = default(System.Guid);
					}
					this.SendPropertyChanged("brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brands")]
	public partial class brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _braId;
		
		private string _braName;
		
		private string _braNameDP;
		
		private string _braCodeDP;
		
		private string _barDescriptionDP;
		
		private string _braDescription;
		
		private string _braCode;
		
		private string _braImage;
		
		private bool _braEdited;
		
		private System.Nullable<int> _braPercent;
		
		private EntitySet<product> _products;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbraIdChanging(System.Guid value);
    partial void OnbraIdChanged();
    partial void OnbraNameChanging(string value);
    partial void OnbraNameChanged();
    partial void OnbraNameDPChanging(string value);
    partial void OnbraNameDPChanged();
    partial void OnbraCodeDPChanging(string value);
    partial void OnbraCodeDPChanged();
    partial void OnbarDescriptionDPChanging(string value);
    partial void OnbarDescriptionDPChanged();
    partial void OnbraDescriptionChanging(string value);
    partial void OnbraDescriptionChanged();
    partial void OnbraCodeChanging(string value);
    partial void OnbraCodeChanged();
    partial void OnbraImageChanging(string value);
    partial void OnbraImageChanged();
    partial void OnbraEditedChanging(bool value);
    partial void OnbraEditedChanged();
    partial void OnbraPercentChanging(System.Nullable<int> value);
    partial void OnbraPercentChanged();
    #endregion
		
		public brand()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid braId
		{
			get
			{
				return this._braId;
			}
			set
			{
				if ((this._braId != value))
				{
					this.OnbraIdChanging(value);
					this.SendPropertyChanging();
					this._braId = value;
					this.SendPropertyChanged("braId");
					this.OnbraIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string braName
		{
			get
			{
				return this._braName;
			}
			set
			{
				if ((this._braName != value))
				{
					this.OnbraNameChanging(value);
					this.SendPropertyChanging();
					this._braName = value;
					this.SendPropertyChanged("braName");
					this.OnbraNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braNameDP", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string braNameDP
		{
			get
			{
				return this._braNameDP;
			}
			set
			{
				if ((this._braNameDP != value))
				{
					this.OnbraNameDPChanging(value);
					this.SendPropertyChanging();
					this._braNameDP = value;
					this.SendPropertyChanged("braNameDP");
					this.OnbraNameDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braCodeDP", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string braCodeDP
		{
			get
			{
				return this._braCodeDP;
			}
			set
			{
				if ((this._braCodeDP != value))
				{
					this.OnbraCodeDPChanging(value);
					this.SendPropertyChanging();
					this._braCodeDP = value;
					this.SendPropertyChanged("braCodeDP");
					this.OnbraCodeDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barDescriptionDP", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string barDescriptionDP
		{
			get
			{
				return this._barDescriptionDP;
			}
			set
			{
				if ((this._barDescriptionDP != value))
				{
					this.OnbarDescriptionDPChanging(value);
					this.SendPropertyChanging();
					this._barDescriptionDP = value;
					this.SendPropertyChanged("barDescriptionDP");
					this.OnbarDescriptionDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braDescription", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string braDescription
		{
			get
			{
				return this._braDescription;
			}
			set
			{
				if ((this._braDescription != value))
				{
					this.OnbraDescriptionChanging(value);
					this.SendPropertyChanging();
					this._braDescription = value;
					this.SendPropertyChanged("braDescription");
					this.OnbraDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string braCode
		{
			get
			{
				return this._braCode;
			}
			set
			{
				if ((this._braCode != value))
				{
					this.OnbraCodeChanging(value);
					this.SendPropertyChanging();
					this._braCode = value;
					this.SendPropertyChanged("braCode");
					this.OnbraCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braImage", DbType="NVarChar(500)")]
		public string braImage
		{
			get
			{
				return this._braImage;
			}
			set
			{
				if ((this._braImage != value))
				{
					this.OnbraImageChanging(value);
					this.SendPropertyChanging();
					this._braImage = value;
					this.SendPropertyChanged("braImage");
					this.OnbraImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braEdited", DbType="Bit NOT NULL")]
		public bool braEdited
		{
			get
			{
				return this._braEdited;
			}
			set
			{
				if ((this._braEdited != value))
				{
					this.OnbraEditedChanging(value);
					this.SendPropertyChanging();
					this._braEdited = value;
					this.SendPropertyChanged("braEdited");
					this.OnbraEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_braPercent", DbType="Int")]
		public System.Nullable<int> braPercent
		{
			get
			{
				return this._braPercent;
			}
			set
			{
				if ((this._braPercent != value))
				{
					this.OnbraPercentChanging(value);
					this.SendPropertyChanging();
					this._braPercent = value;
					this.SendPropertyChanged("braPercent");
					this.OnbraPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_product", Storage="_products", ThisKey="braId", OtherKey="braId")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.brand = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idUser;
		
		private System.Nullable<int> _Payment;
		
		private System.Nullable<int> _DeliveryAddress;
		
		private string _PromoCode;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<System.DateTime> _DateS;
		
		private System.Nullable<System.DateTime> _EstimatedDate;
		
		private System.Nullable<System.DateTime> _DeliveredDate;
		
		private System.Nullable<bool> _Delivered;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnPaymentChanging(System.Nullable<int> value);
    partial void OnPaymentChanged();
    partial void OnDeliveryAddressChanging(System.Nullable<int> value);
    partial void OnDeliveryAddressChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnDateSChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSChanged();
    partial void OnEstimatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedDateChanged();
    partial void OnDeliveredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveredDateChanged();
    partial void OnDeliveredChanging(System.Nullable<bool> value);
    partial void OnDeliveredChanged();
    #endregion
		
		public Orders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="NVarChar(128)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Int")]
		public System.Nullable<int> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="Int")]
		public System.Nullable<int> DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="VarChar(15)")]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateS
		{
			get
			{
				return this._DateS;
			}
			set
			{
				if ((this._DateS != value))
				{
					this.OnDateSChanging(value);
					this.SendPropertyChanging();
					this._DateS = value;
					this.SendPropertyChanged("DateS");
					this.OnDateSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedDate
		{
			get
			{
				return this._EstimatedDate;
			}
			set
			{
				if ((this._EstimatedDate != value))
				{
					this.OnEstimatedDateChanging(value);
					this.SendPropertyChanging();
					this._EstimatedDate = value;
					this.SendPropertyChanged("EstimatedDate");
					this.OnEstimatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveredDate
		{
			get
			{
				return this._DeliveredDate;
			}
			set
			{
				if ((this._DeliveredDate != value))
				{
					this.OnDeliveredDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveredDate = value;
					this.SendPropertyChanged("DeliveredDate");
					this.OnDeliveredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivered", DbType="Bit")]
		public System.Nullable<bool> Delivered
		{
			get
			{
				return this._Delivered;
			}
			set
			{
				if ((this._Delivered != value))
				{
					this.OnDeliveredChanging(value);
					this.SendPropertyChanging();
					this._Delivered = value;
					this.SendPropertyChanged("Delivered");
					this.OnDeliveredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdersDetail")]
	public partial class OrdersDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _proId;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<int> _OrderMain;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproIdChanging(System.Nullable<int> value);
    partial void OnproIdChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnOrderMainChanging(System.Nullable<int> value);
    partial void OnOrderMainChanged();
    #endregion
		
		public OrdersDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proId", DbType="Int")]
		public System.Nullable<int> proId
		{
			get
			{
				return this._proId;
			}
			set
			{
				if ((this._proId != value))
				{
					this.OnproIdChanging(value);
					this.SendPropertyChanging();
					this._proId = value;
					this.SendPropertyChanged("proId");
					this.OnproIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderMain", DbType="Int")]
		public System.Nullable<int> OrderMain
		{
			get
			{
				return this._OrderMain;
			}
			set
			{
				if ((this._OrderMain != value))
				{
					this.OnOrderMainChanging(value);
					this.SendPropertyChanging();
					this._OrderMain = value;
					this.SendPropertyChanged("OrderMain");
					this.OnOrderMainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAddress")]
	public partial class UserAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdUser;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Phone;
		
		private System.Nullable<int> _ZipCode;
		
		private string _Latitude;
		
		private string _Length;
		
		private string _Image;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(string value);
    partial void OnIdUserChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnZipCodeChanging(System.Nullable<int> value);
    partial void OnZipCodeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public UserAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="NVarChar(128)")]
		public string IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int")]
		public System.Nullable<int> ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="VarChar(50)")]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(128)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bitacoraSyncs")]
	public partial class bitacoraSync : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _bitDate;
		
		private int _bitCategoriesUpdated;
		
		private int _bitCategoriesInserted;
		
		private int _bitBrandsUpdated;
		
		private int _bitBrandsInserted;
		
		private int _bitProductsUpdated;
		
		private int _bitProductsInserted;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbitDateChanging(System.DateTime value);
    partial void OnbitDateChanged();
    partial void OnbitCategoriesUpdatedChanging(int value);
    partial void OnbitCategoriesUpdatedChanged();
    partial void OnbitCategoriesInsertedChanging(int value);
    partial void OnbitCategoriesInsertedChanged();
    partial void OnbitBrandsUpdatedChanging(int value);
    partial void OnbitBrandsUpdatedChanged();
    partial void OnbitBrandsInsertedChanging(int value);
    partial void OnbitBrandsInsertedChanged();
    partial void OnbitProductsUpdatedChanging(int value);
    partial void OnbitProductsUpdatedChanged();
    partial void OnbitProductsInsertedChanging(int value);
    partial void OnbitProductsInsertedChanged();
    #endregion
		
		public bitacoraSync()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime bitDate
		{
			get
			{
				return this._bitDate;
			}
			set
			{
				if ((this._bitDate != value))
				{
					this.OnbitDateChanging(value);
					this.SendPropertyChanging();
					this._bitDate = value;
					this.SendPropertyChanged("bitDate");
					this.OnbitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitCategoriesUpdated", DbType="Int NOT NULL")]
		public int bitCategoriesUpdated
		{
			get
			{
				return this._bitCategoriesUpdated;
			}
			set
			{
				if ((this._bitCategoriesUpdated != value))
				{
					this.OnbitCategoriesUpdatedChanging(value);
					this.SendPropertyChanging();
					this._bitCategoriesUpdated = value;
					this.SendPropertyChanged("bitCategoriesUpdated");
					this.OnbitCategoriesUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitCategoriesInserted", DbType="Int NOT NULL")]
		public int bitCategoriesInserted
		{
			get
			{
				return this._bitCategoriesInserted;
			}
			set
			{
				if ((this._bitCategoriesInserted != value))
				{
					this.OnbitCategoriesInsertedChanging(value);
					this.SendPropertyChanging();
					this._bitCategoriesInserted = value;
					this.SendPropertyChanged("bitCategoriesInserted");
					this.OnbitCategoriesInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitBrandsUpdated", DbType="Int NOT NULL")]
		public int bitBrandsUpdated
		{
			get
			{
				return this._bitBrandsUpdated;
			}
			set
			{
				if ((this._bitBrandsUpdated != value))
				{
					this.OnbitBrandsUpdatedChanging(value);
					this.SendPropertyChanging();
					this._bitBrandsUpdated = value;
					this.SendPropertyChanged("bitBrandsUpdated");
					this.OnbitBrandsUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitBrandsInserted", DbType="Int NOT NULL")]
		public int bitBrandsInserted
		{
			get
			{
				return this._bitBrandsInserted;
			}
			set
			{
				if ((this._bitBrandsInserted != value))
				{
					this.OnbitBrandsInsertedChanging(value);
					this.SendPropertyChanging();
					this._bitBrandsInserted = value;
					this.SendPropertyChanged("bitBrandsInserted");
					this.OnbitBrandsInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitProductsUpdated", DbType="Int NOT NULL")]
		public int bitProductsUpdated
		{
			get
			{
				return this._bitProductsUpdated;
			}
			set
			{
				if ((this._bitProductsUpdated != value))
				{
					this.OnbitProductsUpdatedChanging(value);
					this.SendPropertyChanging();
					this._bitProductsUpdated = value;
					this.SendPropertyChanged("bitProductsUpdated");
					this.OnbitProductsUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitProductsInserted", DbType="Int NOT NULL")]
		public int bitProductsInserted
		{
			get
			{
				return this._bitProductsInserted;
			}
			set
			{
				if ((this._bitProductsInserted != value))
				{
					this.OnbitProductsInsertedChanging(value);
					this.SendPropertyChanging();
					this._bitProductsInserted = value;
					this.SendPropertyChanged("bitProductsInserted");
					this.OnbitProductsInsertedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workshop")]
	public partial class Workshop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdWorkshop;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Email;
		
		private System.Nullable<int> _ZipCode;
		
		private string _Latitude;
		
		private string _Length;
		
		private string _WorkImage;
		
		private System.Nullable<int> _Average;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdWorkshopChanging(int value);
    partial void OnIdWorkshopChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnZipCodeChanging(System.Nullable<int> value);
    partial void OnZipCodeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    partial void OnWorkImageChanging(string value);
    partial void OnWorkImageChanged();
    partial void OnAverageChanging(System.Nullable<int> value);
    partial void OnAverageChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    #endregion
		
		public Workshop()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWorkshop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdWorkshop
		{
			get
			{
				return this._IdWorkshop;
			}
			set
			{
				if ((this._IdWorkshop != value))
				{
					this.OnIdWorkshopChanging(value);
					this.SendPropertyChanging();
					this._IdWorkshop = value;
					this.SendPropertyChanged("IdWorkshop");
					this.OnIdWorkshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int")]
		public System.Nullable<int> ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="VarChar(50)")]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkImage", DbType="VarChar(200)")]
		public string WorkImage
		{
			get
			{
				return this._WorkImage;
			}
			set
			{
				if ((this._WorkImage != value))
				{
					this.OnWorkImageChanging(value);
					this.SendPropertyChanging();
					this._WorkImage = value;
					this.SendPropertyChanged("WorkImage");
					this.OnWorkImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average", DbType="Int")]
		public System.Nullable<int> Average
		{
			get
			{
				return this._Average;
			}
			set
			{
				if ((this._Average != value))
				{
					this.OnAverageChanging(value);
					this.SendPropertyChanging();
					this._Average = value;
					this.SendPropertyChanged("Average");
					this.OnAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
